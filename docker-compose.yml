version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: meteora-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file: .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/meteora
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - meteora-network

  postgres:
    image: postgres:15-alpine
    container_name: meteora-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=meteora
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - meteora-network

  redis:
    image: redis:7-alpine
    container_name: meteora-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - meteora-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: meteora-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@meteora.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - meteora-network

networks:
  meteora-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  pgadmin-data:
